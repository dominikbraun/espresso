#
# Espresso CircleCI 2.1 Configuration
#
# This CI pipeline is capable of validating the code, running unit
# tests and - if the workflow has been triggered by a tag - building
# binaries for all supported platforms, creating a GitHub release as
# well as publishing a corresponding Docker image to Docker Hub.
#
version: 2.1

executors:
  go-container:
    docker:
      - image: circleci/golang:1.13
        environment:
          CGO_ENABLED: 0
          G111MODULE: "on"

jobs:
  espresso-test:
    executor: go-container
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-v1-{{ .Branch }}-{{ checksum "go.mod" }}
            - dependency-cache-v1-{{ .Branch }}-
            - dependency-cache-v1-
            - repository-cache-v1-{{ .Branch }}-{{ .Revision }}
            - repository-cache-v1-{{ .Branch }}-
            - repository-cache-v1-
      - run: go mod download
      - save_cache:
          key: dependency-cache-v1-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg
      - save_cache:
          key: repository-cache-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run:
          name: Check Go format
          command: "! go fmt ./... | read"
      - run:
          name: Run all tests
          command: go test -v ./...

  espresso-build-releases:
    executor: go-container
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-v1-{{ .Branch }}-{{ checksum "go.mod" }}
            - dependency-cache-v1-{{ .Branch }}-
            - dependency-cache-v1-
            - repository-cache-v1-{{ .Branch }}-{{ .Revision }}
            - repository-cache-v1-{{ .Branch }}-
            - repository-cache-v1-
      - run: go mod download
      - save_cache:
          key: dependency-cache-v1-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg
      - save_cache:
          key: repository-cache-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run: mkdir -p /tmp/artifacts
      - run:
          name: Build and pack Espresso for Linux
          command: |
            GOOS=linux GOARCH=amd64 go build -v -o .target/espresso cmd/main.go
            cp .target/espresso espresso
            tar -czf /tmp/artifacts/espresso-linux-amd64.tar.gz espresso
      - run:
          name: Build and pack Espresso for macOS
          command: |
            GOOS=darwin GOARCH=amd64 go build -v -o .target/espresso cmd/main.go
            cp .target/espresso espresso
            tar -czf /tmp/artifacts/espresso-macos-amd64.tar.gz espresso
      - run:
          name: Build and pack Espresso for Windows
          command: |
            GOOS=windows GOARCH=amd64 go build -v -o .target/espresso.exe cmd/main.go
            cp .target/espresso.exe espresso.exe
            zip /tmp/artifacts/cleanup-windows-amd64.zip espresso.exe
      - persist_to_workspace:
          root: /tmp/artifacts
          paths:
            - espresso-linux-amd64.tar.gz
            - espresso-macos-amd64.tar.gz
            - cleanup-windows-amd64.zip

  espresso-release-gh:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - run: mkdir artifacts && cp /tmp/artifacts/* artifacts/
      - run:
          name: Publish GitHub release
          command: |
            ghr -t "${GITHUB_TOKEN}" \
                -u "${CIRCLE_PROJECT_USERNAME}" \
                -r "${CIRCLE_PROJECT_REPONAME}" \
                -c "${CIRCLE_SHA1}" \
                -delete "${CIRCLE_TAG}" \
                artifacts/

  espresso-release-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Log in to Docker Hub
          command: |
            echo ${DOCKER_PASS} | docker login --username ${DOCKER_USER} --password-stdin
      - run:
          name: Build the Docker image (Light)
          command: |
            docker image build --build-arg VERSION=${CIRCLE_TAG} -t dominikbraun/espresso:${CIRCLE_TAG} .
      - run:
          name: Tag the Docker image (Light) as latest
          command: |
            docker image tag dominikbraun/espresso:${CIRCLE_TAG} dominikbraun/espresso:latest
      - run:
          name: Publish the Docker images (Light)
          command: |
            docker push dominikbraun/espresso:${CIRCLE_TAG}
            docker push dominikbraun/espresso:latest

workflows:
  version: 2
  espresso-ci:
    jobs:
      - espresso-test:
          filters:
            tags:
              only: /.*/
      - espresso-build-releases:
          requires:
            - espresso-test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - espresso-release-gh:
          requires:
            - espresso-build-releases
          filters:
            tags:
              only: /.*/
      - espresso-release-docker:
          requires:
            - espresso-release-gh
          filters:
            tags:
              only: /.*/